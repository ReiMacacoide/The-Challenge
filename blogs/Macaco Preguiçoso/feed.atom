<?xml version='1.0' encoding='utf-8'?>
<feed xmlns='http://www.w3.org/2005/Atom' xmlns:blogger='http://schemas.google.com/blogger/2018'>
  <id>tag:blogger.com,1999:blog-8958110170585286245</id>
  <title>Macaco Preguiçoso</title>
  <entry>
    <id>tag:blogger.com,1999:blog-8958110170585286245.post-959367898558231040</id>
    <blogger:type>POST</blogger:type>
    <blogger:status>LIVE</blogger:status>
    <author>
      <name>Oscar Fm</name>
      <uri>https://plus.google.com/+OscarFMacedoOdicforcesounds</uri>
      <blogger:type>BLOGGER</blogger:type>
    </author>
    <title>Sobre este Blog</title>
    <content type='html'>Este blog vem em sequência da necessidade de aprender a programar &lt;b&gt;JavaScript&lt;/b&gt; para criar a aplicação relativa ao projecto odicforcesounds explicado em vários textos, textos estes que uns melhores do que outros, servem para complementarem-se entre si, com o número de funcionalidades minimas necessárias que a aplicação precisa de ter para considerar que está completa.&lt;br /&gt;
&lt;br /&gt;
O mundo&amp;nbsp; da programação é estupidamente gigante no número de escolhas e na verdade parece que qualquer linguagem funciona. De qualquer modo saiu-me na rifa escolher &lt;a href="https://www.w3schools.com/js/default.asp" rel="nofollow" target="_blank"&gt;JavaScript&lt;/a&gt;. A ultima versão é melhor do que a anterior mas continua a ser complexa. O número de escolhas de frameworks feitas em JavaScript também é relativamente gigante, sendo que quase todas fazem mais ou menos o mesmo. O site &lt;a href="http://odicforcesounds.com/" target="_blank"&gt;odicforcesounds&lt;/a&gt;&amp;nbsp;foi feito com &lt;a href="https://angular.io/" rel="nofollow" target="_blank"&gt;Angular5&lt;/a&gt; mas a parte lógica faz parte da funcionalidade do próprio &lt;b&gt;Angular&lt;/b&gt;, de resto foi adicionar html e css ( nada mais ), nem um única linha de JavaScript feita por mim!&lt;br /&gt;
&lt;br /&gt;
No meio do caos encontrei uma framework que faz o que quero sem aprender conceitos complexos.&lt;br /&gt;
Mesmo assim, a aplicação que quero criar pede lógica, planeamento, design e todas os conceitos que foram completamente ignorados quando fiz o site. Não creio que o site esteja desorganizado, mas vendo bem a funcionalidade do Angular, pode ficar muito melhor e com a aplicação integrada.&lt;br /&gt;
&lt;br /&gt;
Nesse aspecto, existem outras frameworks desenhadas para exportar a aplicação web para aplicação &lt;b&gt;iOS&lt;/b&gt; e &lt;b&gt;Android&lt;/b&gt; que também funcionam com JavaScript. Assim não me resta outra alternativa se não a de aprender a programar em JavaScript.&lt;br /&gt;
&lt;br /&gt;
Vou tentar explicar os conceitos que aprendi manipulando ao longo do processo, as variaveis e\ou funções da aplicação que quero construir.&lt;br /&gt;
&lt;br /&gt;
Gosto de palavras e também gosto de números. Os números ocupam menos espaço do que as palavras e levam-nos a errar menos quanto à sua interpretação, pois usamos uma objectivação absolutista.&lt;br /&gt;
&lt;br /&gt;
Os números e a matemática numa primeira fase, ensina os números como elementos absolutos. 1, 2, 3, 4, 5... Há uma absolutismo expresso em qualquer número, que consideramos verdadeiro, sendo que está mais do que provado que não pode haver uma expressão absoluta no tempo e no espaço.&lt;br /&gt;
&lt;br /&gt;
Como não consigo separar-me do lado fantástico expresso no site, terei de adaptar-me às expressões de aproximação de absolutos. Uma leitura no meu blog &lt;b&gt;CriticaSemPiedade&lt;/b&gt;, é uma must caso a parte puramente teórica seja importante para entenderem a minha forma de pensar, pois é teor que tenta sublinhar uma posição vertical.&lt;br /&gt;
&lt;br /&gt;
Neste blog, tentarei ser o mais objectivo possível, sendo que me considero um teórico e que até a documentação de qualquer linguagem de programação, tem textos puramente teóricos, pois a teoria pode ter expressão na realidade e a expressão da realidade é a condição para haver a necessidade de criar novas teorias que poderão simplesmente ser a soma das anteriores, significando assim que o absolutismo está expresso numa única expressão que inclui os elementos que lhe foram somados e\ou separa-os. 1 + 1 = 1 ou 3&lt;br /&gt;
&lt;br /&gt;
O que será a soma de dois números se não a soma de dois abjectos que se podem integrar?&lt;br /&gt;
Ora números ora palavras ambas separadas.&lt;br /&gt;
O resultado da soma de todas as partes terá uma expressão, mas é impossível haver uma expressão sem haver a condição para que a mesma se expresse. 1+a = "ola" &amp;gt; ERRO&lt;br /&gt;
&lt;br /&gt;
É neste falso absolutismo que nos guiamos para certezas aproximadas que vemos como resultados, esquecendo o que aprendemos, pois caso não tivessemos aprendido, não teriamos a capacidade de ler expressões lógicas e de as manipular em prol de um avanço na ciência, que afinal de contas, o que seremos nós se não ciência?&lt;br /&gt;
&lt;br /&gt;
Um amigo está disposto a ensinar-me algoritmia. Parece que mais cedo ou mais tarde irei precisar, por isso vou aproveitar. Passei a minha vida a fugir dos números e da matemática, e de todas as outras ciências que afinal de contas, avançam a partir das teorias para ter efeito na realidade e\ou explica-la.</content>
    <blogger:created>2018-04-13T22:16:16.348Z</blogger:created>
    <published>2018-04-14T00:05:00.001Z</published>
    <updated>2018-04-16T00:56:45.036Z</updated>
    <category scheme='tag:blogger.com,1999:blog-8958110170585286245' term='odicforcesounds'/>
    <category scheme='tag:blogger.com,1999:blog-8958110170585286245' term='CSS'/>
    <category scheme='tag:blogger.com,1999:blog-8958110170585286245' term='Github'/>
    <category scheme='tag:blogger.com,1999:blog-8958110170585286245' term='HTML'/>
    <category scheme='tag:blogger.com,1999:blog-8958110170585286245' term='JSON'/>
    <category scheme='tag:blogger.com,1999:blog-8958110170585286245' term='npm'/>
    <category scheme='tag:blogger.com,1999:blog-8958110170585286245' term='nodejs'/>
    <category scheme='tag:blogger.com,1999:blog-8958110170585286245' term='preguiçoso'/>
    <category scheme='tag:blogger.com,1999:blog-8958110170585286245' term='hacking'/>
    <category scheme='tag:blogger.com,1999:blog-8958110170585286245' term='humor'/>
    <category scheme='tag:blogger.com,1999:blog-8958110170585286245' term='Web'/>
    <category scheme='tag:blogger.com,1999:blog-8958110170585286245' term='webpack'/>
    <category scheme='tag:blogger.com,1999:blog-8958110170585286245' term='OpenSource'/>
    <category scheme='tag:blogger.com,1999:blog-8958110170585286245' term='JavaScript'/>
    <category scheme='tag:blogger.com,1999:blog-8958110170585286245' term='macaco'/>
    <category scheme='tag:blogger.com,1999:blog-8958110170585286245' term='Desafio'/>
    <blogger:filename>/2018/04/sobre-este-blog.html</blogger:filename>
  </entry>
  <entry>
    <id>tag:blogger.com,1999:blog-8958110170585286245.post-1328746694632295165</id>
    <blogger:type>POST</blogger:type>
    <blogger:status>LIVE</blogger:status>
    <author>
      <name>Oscar Fm</name>
      <uri>https://plus.google.com/+OscarFMacedoOdicforcesounds</uri>
      <blogger:type>BLOGGER</blogger:type>
    </author>
    <title>A Salada de Frutas</title>
    <content type='html'>Existem cada vez mais frameworks que "facilitam" a vida dos programadores, mas de algum modo todas essas frameworks consumem imensos recursos do computador só para criar uma página.&lt;br /&gt;
&lt;br /&gt;
Vamos considerar que cada libraria de &lt;b&gt;JavaScript&lt;/b&gt; é uma fruta pois é um conjunto de instruções que tem funcionalidades especificas para manipular o &lt;b&gt;DOM&lt;/b&gt; e que podem ser consideradas "aplicações".&lt;br /&gt;
&lt;br /&gt;
Na instalação das librarias do Angular, a pasta node_modules ocupa quase 500MB.&lt;br /&gt;
Uma salada de frutas estupidamente grande só para abrir uma página &lt;b&gt;HTML&lt;/b&gt;.&lt;br /&gt;
&lt;br /&gt;
Como utilizador &lt;b&gt;Linux&lt;/b&gt; entendo que um sistema operativo seja igualmente uma salada de frutas no que toca à quantidade de ficheiros necessários para um sistema correr e mesmo assim, sei que posso correr um sistema operativo que ocupe menos do que 500 megas!!!&lt;br /&gt;
&lt;br /&gt;
É um absurdo pensar que todas estas funcionalidades que estão facilitadas quanto ao seu uso em qualquer uma das frameworks mais populares de JavaScript, peçam tanto espaço em disco, como também tantos recursos. (processador e memória)&lt;br /&gt;
&lt;br /&gt;
Vejo este problema como algo ainda mais complicado resolver, porque se estas frameworks têm necessidade de usar tantas librarias para funcionarem, pode significar que tenho imenso para aprender e na verdade não me apetece passar o resto da eternidade a tentar aprender uma língua que ocupa tanto espaço e afinal de contas, para quem não usa JavaScript nem acesso de leitura tem.&lt;br /&gt;
&lt;br /&gt;
A pasta das librarias do &lt;b&gt;&lt;a href="https://vuejs.org/" rel="nofollow" target="_blank"&gt;Vue&lt;/a&gt;&lt;/b&gt; ocupa 300MB. No fundo parece uma verdadeira salada de frutas! LOL&lt;br /&gt;
&lt;br /&gt;
Por vezes penso que o sistema operativo Windows&amp;nbsp; é feito em JavaScript, porque a instalação mais simples ocupa mais de 1GB.&lt;br /&gt;
&lt;br /&gt;
Se por um lado olho para estas frameworks como algo assuntador, por outro lado penso que elas são inuteis, mas quiça não sejam tão inúteis quanto imagino. Até parece que o JavaScript é uma lingua preguiçosa, tal como o Slackware é uma distribuição preguiçosa, entre outras distribuições Linux e línguas de programação.&lt;br /&gt;
&lt;br /&gt;
Por vezes creio que nem é preciso aprender e\ou usar JavaScript, mas como quase todos nós nesta vida, dedicamo-nos a algo que nem sempre é realmente necessário. Essa é a parte divertida de aprender, pois caso aprender não seja divertido, mais vale não aprender!&lt;br /&gt;
&lt;br /&gt;
&lt;div style="text-align: center;"&gt;
Expressões de alguém que se diverte a aprender:&amp;nbsp;&lt;/div&gt;
&lt;div style="text-align: center;"&gt;
&lt;br /&gt;&lt;/div&gt;
&lt;div style="text-align: center;"&gt;
"Uau, um problema para resolver"&lt;/div&gt;
&lt;div style="text-align: center;"&gt;
"Que bom, ao fim de duas semanas consegui"&lt;/div&gt;
&lt;div style="text-align: center;"&gt;
&lt;br /&gt;&lt;/div&gt;
&lt;div style="text-align: center;"&gt;
LOL&lt;/div&gt;
&lt;br /&gt;
Tenho visto imensos programas e\ou transmições de programadores de todo o mundo que falam das frustrações que têm de lidar, da organização necessária, dos comentários e de muitos outros problemas que existem nas suas carreiras. É desta forma que me tenho mentalizado para a constante problemática que tenho em frente.&lt;br /&gt;
&lt;br /&gt;
No fundo o JavaScript é usado para manipular os vários elementos que uma página de HTML pode conter, como também manipular o CSS. A pergunta que me faço é: "Até que ponto é necessário usar uma framework onde qualquer página HTML precisa explicitamente do JavaScript? Creio que não há qualquer necessidade de usar uma Framework de JavaScript para um site estático mas quiça tenha sentido para criar uma aplicação móvel. E é para isso que aqui estamos!&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;</content>
    <blogger:created>2018-04-14T21:06:16.537Z</blogger:created>
    <published>2018-04-14T22:08:00.001Z</published>
    <updated>2018-04-16T00:56:31.230Z</updated>
    <category scheme='tag:blogger.com,1999:blog-8958110170585286245' term='odicforcesounds'/>
    <category scheme='tag:blogger.com,1999:blog-8958110170585286245' term='CSS'/>
    <category scheme='tag:blogger.com,1999:blog-8958110170585286245' term='Github'/>
    <category scheme='tag:blogger.com,1999:blog-8958110170585286245' term='HTML'/>
    <category scheme='tag:blogger.com,1999:blog-8958110170585286245' term='JSON'/>
    <category scheme='tag:blogger.com,1999:blog-8958110170585286245' term='npm'/>
    <category scheme='tag:blogger.com,1999:blog-8958110170585286245' term='nodejs'/>
    <category scheme='tag:blogger.com,1999:blog-8958110170585286245' term='preguiçoso'/>
    <category scheme='tag:blogger.com,1999:blog-8958110170585286245' term='hacking'/>
    <category scheme='tag:blogger.com,1999:blog-8958110170585286245' term='humor'/>
    <category scheme='tag:blogger.com,1999:blog-8958110170585286245' term='Web'/>
    <category scheme='tag:blogger.com,1999:blog-8958110170585286245' term='webpack'/>
    <category scheme='tag:blogger.com,1999:blog-8958110170585286245' term='OpenSource'/>
    <category scheme='tag:blogger.com,1999:blog-8958110170585286245' term='JavaScript'/>
    <category scheme='tag:blogger.com,1999:blog-8958110170585286245' term='macaco'/>
    <category scheme='tag:blogger.com,1999:blog-8958110170585286245' term='Desafio'/>
    <blogger:filename>/2018/04/a-salada-de-frutas.html</blogger:filename>
  </entry>
  <entry>
    <id>tag:blogger.com,1999:blog-8958110170585286245.post-4023057895248292223</id>
    <blogger:type>POST</blogger:type>
    <blogger:status>LIVE</blogger:status>
    <author>
      <name>Oscar Fm</name>
      <uri>https://plus.google.com/+OscarFMacedoOdicforcesounds</uri>
      <blogger:type>BLOGGER</blogger:type>
    </author>
    <title>Reciclagem de alimentos</title>
    <content type='html'>Hoje em dia fazer uma jantarada para as amigas é um processo relativamente fácil, pois podemos comprar os alimentos no supermecado. Depois, toda a concepção que está em volta dos métodos usados para a confeção dos alimentos é o processo que nos pede atenção.&lt;br /&gt;
&lt;br /&gt;
É claro que a maioria dos alimentos já estão relativamente preparados para serem digeridos, mas quiça também lembrar que todos eles passaram por um processo de cuidado no tempo e no espaço, antes que chegue à nossa boca.&lt;br /&gt;
&lt;br /&gt;
O &lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/About_JavaScript" rel="nofollow" target="_blank"&gt;JavaScript&lt;/a&gt; por si só é uma língua fácil de entender, contúdo as frameworks mais populares foram desenvolvendo outras formas de abordar o "problema". (Hacking)&lt;br /&gt;
&lt;br /&gt;
Hackear é o acto de descobrir novas formas de interagir com determinada matéria, a qual não foi pensada aquando feita. Isto é, o HTML é uma língua que "cospe" elementos (tag) para uma página web, mas como o HTML não foi desenhado para manipular os elemento que produz, usa-se o CSS para melhorar a apresentação do conteúdo do HTML.&lt;br /&gt;
&lt;br /&gt;
Entretento o JavaScript aparece para manipular ambas as línguas (HTML e CSS).&lt;br /&gt;
&lt;br /&gt;
Não tenho a certeza, mas creio que até línguas mais "avançadas" tais como o C, C++, C#, Python, Ruby, entre muitas outras, quando usadas para a criação de sites, precisam de JavaScript para criar as mesmas funcionalidades que o JavaScript oferece. Além disso, hoje em dia, o JavaScript já oferece mecanismos para lidar com operações mais complexas, tal como gestão de base de dados.&lt;br /&gt;
&lt;br /&gt;
Porquê usar o &lt;a href="https://www.npmjs.com/" rel="nofollow" target="_blank"&gt;NPM&lt;/a&gt; e o &lt;a href="https://nodejs.org/en/" rel="nofollow" target="_blank"&gt;Nodejs&lt;/a&gt;?&lt;br /&gt;
&lt;br /&gt;
Por vezes podemos estar sem internet... Uma maioria das librarias que usamos para nos facilitar o desenvolvimento de uma página web, têm necessidade de ter acesso à internet, pois é uma opção usar um &lt;a href="https://www.webopedia.com/TERM/C/CDN.html" rel="nofollow" target="_blank"&gt;CDN&lt;/a&gt; das várias técnologias que existem na web e que foram feitas com esse propósito.&lt;br /&gt;
&lt;br /&gt;
Além disso, para mim que tenho uma grande dificuldade em organizar seja lá o que for, posso usar o Webpack para organizar os ficheiros. E na verdade uma maioria das frameworks mais populares usa o &lt;a href="https://webpack.js.org/" rel="nofollow" target="_blank"&gt;Webpack&lt;/a&gt; para a gestão dos projectos Web.&lt;br /&gt;
&lt;br /&gt;
Parece-me que agora faz todo o sentido pensar na reciclagem de alimentos e o mais interessante é que todos eles são da mesma família de "ser vivo". Vegetais! Desde as nózes até aos morangos, alfaces e tomates, todos são vegetais. Tentar criar um novo fruto parece uma opção sem qualquer sentido, mas de qualquer forma terá sentido ter a curiosidade de entender a estrutura orgânica dos seres vivos.&lt;br /&gt;
&lt;br /&gt;
&lt;b&gt;Lógica&lt;/b&gt;: &lt;i&gt;Se posso comprar morangos para comer morangos, qual será a lógica de plantar morangos e esperar que estejam em conformidade para comer?&lt;/i&gt;&lt;br /&gt;
&lt;i&gt;&lt;br /&gt;&lt;/i&gt;
&lt;b&gt;Lógica&lt;/b&gt;&lt;i&gt;: Se não posso comprar morangos para comer morangos, qual será a lógica de sair do campo e ir para a cidade, quando posso cultivar morangos para comer e vender?&amp;nbsp;&lt;/i&gt;&lt;br /&gt;
&lt;i&gt;&lt;br /&gt;&lt;/i&gt;
Há sempre escolhas que estão associadas à nossa liberdade, isto é, às nossas condições existenciais, que nem sempre referem o próprio, mas a condição de partilha dos além de nós. Assim aqui fica um brinde Eterno a todas as pessoas que desenvolveram uma linguagem de programação e\ou projecto e partilharam-os!!! Desde o Linux até ao JavaScript, Python, C, etc.., todas sem excepção melhoraram por terem sido partilhadas, pois assim considera-se que melhoraram porque terceiros tiveram a oportunidade de melhorar. Riu-me quando há pessoas que são contra a partilha de conhecimento. Sem a partilha de conhecimento, ainda hoje estariamos no tempo das cavernas.. ou se calhar nem isso, pois não faria sentido existirmos! LOL&lt;br /&gt;
&lt;br /&gt;
O Google Chrome Dev Tools funciona muito melhor do que no Firefox. O Firefox tem sempre um problema qualquer com os ficheiros .js (javaScript) e por vezes o browser crasha. Por isso usar o Google Chrome, que é um must para aprender JavaScript.&lt;br /&gt;
&lt;br /&gt;
Tal como todas as línguas de programação, a documentação partilha exemplos práticos de como usar o código. Todas as línguas (até as verbais) são compostas de instruções com funções!&lt;br /&gt;
&lt;br /&gt;
O JavaScript, o HTML e o CSS seguem esse exemplo. Por isso terá sentido serem as 3 línguas de programação para o desenvimento de páginas web mais usadas, pois não há dúvida que não se pode fazer páginas Web sem pelo menos se usar o HTML.&lt;br /&gt;
&lt;br /&gt;
Voltando à necessidade de usar a &lt;b&gt;Lógica&lt;/b&gt;: para quê recusar usar todas as librarias e\ou tecnologias feitas em JavaScript que nos ajudam a organizar os ficheiros e os elementos de páginas web de uma forma dinâmica e mais rápida e eficiente? Talvez somente porque não há necessidade de usar mais memória e espaço com funcionalidades que não usamos na página.&lt;br /&gt;
&lt;br /&gt;
Por exemplo: A minha página "odicforcesounds.com" é feita em Angular5 e o ficheiro main.bundle.js ocupa 1.6MB o que é um absurdo dado que não uso nenhuma funcionalidade extra além da funcionalidade que o próprio angular oferece. Criar componente adicionar "path:", adicionar conteudo ao componente, adiciona-lo a outro componente como link, neste caso (página). Cada página do site é um componente. Não sei se o JavaScript requerido para fazer somente essa funcionalidade tenha necessidade de ser tão grande, mas pelo menos não tive de lidar com isso.&lt;br /&gt;
&lt;br /&gt;
Agora há uma necessidade explicita de lidar com o JavaScript. Tal como qualquer outra língua de programação, segue os mesmos princípios básicos: Declaração de variaveis e funções que manipulam o valor dessas variaveis. Vou usar esta conta do &lt;a href="https://github.com/rakzhodekams/Blog" rel="nofollow" target="_blank"&gt;Github&lt;/a&gt; para alojar ficheiros que vou criar neste meu processo de aprendizagem. Creio que não será má ideia tentar refazer o site sem usar uma framework que me facilite a vida antes de começar a lidar com problemas mais complexos.</content>
    <blogger:created>2018-04-15T21:17:34.931Z</blogger:created>
    <published>2018-04-15T22:35:00.001Z</published>
    <updated>2018-04-15T22:35:08.191Z</updated>
    <category scheme='tag:blogger.com,1999:blog-8958110170585286245' term='odicforcesounds'/>
    <category scheme='tag:blogger.com,1999:blog-8958110170585286245' term='CSS'/>
    <category scheme='tag:blogger.com,1999:blog-8958110170585286245' term='Github'/>
    <category scheme='tag:blogger.com,1999:blog-8958110170585286245' term='JSON'/>
    <category scheme='tag:blogger.com,1999:blog-8958110170585286245' term='HTML'/>
    <category scheme='tag:blogger.com,1999:blog-8958110170585286245' term='npm'/>
    <category scheme='tag:blogger.com,1999:blog-8958110170585286245' term='nodejs'/>
    <category scheme='tag:blogger.com,1999:blog-8958110170585286245' term='preguiçoso'/>
    <category scheme='tag:blogger.com,1999:blog-8958110170585286245' term='hacking'/>
    <category scheme='tag:blogger.com,1999:blog-8958110170585286245' term='humor'/>
    <category scheme='tag:blogger.com,1999:blog-8958110170585286245' term='Web'/>
    <category scheme='tag:blogger.com,1999:blog-8958110170585286245' term='webpack'/>
    <category scheme='tag:blogger.com,1999:blog-8958110170585286245' term='OpenSource'/>
    <category scheme='tag:blogger.com,1999:blog-8958110170585286245' term='JavaScript'/>
    <category scheme='tag:blogger.com,1999:blog-8958110170585286245' term='macaco'/>
    <category scheme='tag:blogger.com,1999:blog-8958110170585286245' term='Desafio'/>
    <blogger:filename>/2018/04/reciclagem-de-alimentos.html</blogger:filename>
  </entry>
  <entry>
    <id>tag:blogger.com,1999:blog-8958110170585286245.post-6713785204887567363</id>
    <blogger:type>POST</blogger:type>
    <blogger:status>LIVE</blogger:status>
    <author>
      <name>Oscar Fm</name>
      <uri>https://plus.google.com/+OscarFMacedoOdicforcesounds</uri>
      <blogger:type>BLOGGER</blogger:type>
    </author>
    <title>Manual de Instruções - Parte 1</title>
    <content type='html'>&lt;div style="text-align: justify;"&gt;
Depois de preparar-me para lidar com as várias ferramentas que a cozinha disponibiliza, está na altura de entender os termos do manual de instruções.&amp;nbsp;&lt;/div&gt;
&lt;div style="text-align: justify;"&gt;
&lt;br /&gt;&lt;/div&gt;
&lt;div style="text-align: justify;"&gt;
Parece-me uma boa ideia entendender os termos antes de os usar, pois fará mais sentido usa-los depois de saber para que servem. ( faz sentido )&amp;nbsp;&lt;/div&gt;
&lt;div style="text-align: justify;"&gt;
&lt;br /&gt;&lt;/div&gt;
&lt;div style="text-align: justify;"&gt;
Creio que no post anterior, disse que teria de instalar o Babel para usar a versão mais actual do JavaScript, mas na verdade para fazer o que estou a pensar fazer ( refazer o site odicforcesounds.com ) não tenho necessidade.&amp;nbsp;&lt;/div&gt;
&lt;div style="text-align: justify;"&gt;
&lt;br /&gt;&lt;/div&gt;
&lt;div style="text-align: justify;"&gt;
Talvez quando começar a programar a aplicação, tenha essa necessidade para lidar com a base de dados, mas para já, não há qualquer ponto que indique a necessidade vertical de usar essas librarias. Ainda bem porque na verdade só por instalar essas librarias todas, tenho de usar mais de 300MB.&amp;nbsp;&lt;/div&gt;
&lt;div style="text-align: justify;"&gt;
&lt;br /&gt;&lt;/div&gt;
&lt;div style="text-align: justify;"&gt;
Tenho de focar-me somente no que realmente preciso, pois não há a necessidade de aprender profundamente a dominar todos os recursos da língua para fazer algo relativamente básico.&amp;nbsp;&lt;/div&gt;
&lt;div style="text-align: justify;"&gt;
&lt;br /&gt;&lt;/div&gt;
&lt;div style="text-align: justify;"&gt;
Para me facilitar a vida, vou usar o &lt;a href="https://developer.chrome.com/devtools" rel="nofollow" target="_blank"&gt;Google Chrome DevTools&lt;/a&gt;&amp;nbsp;que permite programar directamento na consola /&amp;nbsp; local WorkSpace sem necessidade de usar um editor. Mesmo assim, para testar as funcionalidades da língua, a consola é o primeiro passo para estruturar objectivos. Mas um editor de texto preparado para o desenvolvimento da língua com os parametros coloridos, é mais fácil de ler e escrever código.&amp;nbsp;&lt;/div&gt;
&lt;div style="text-align: justify;"&gt;
&lt;br /&gt;&lt;/div&gt;
&lt;div style="text-align: justify;"&gt;
O JavaScript supera por completo a primeira ideia que tinha da língua. Serve primariamente para adicionar e remover conteúdo de forma dinâmica, isto é, a partir do JavaScript e não a partir do HTML.&amp;nbsp;&lt;/div&gt;
&lt;div style="text-align: justify;"&gt;
&lt;br /&gt;&lt;/div&gt;
&lt;div style="text-align: justify;"&gt;
Considere-se o seguinte exemplo:&amp;nbsp;&lt;/div&gt;
&lt;div style="text-align: justify;"&gt;
&lt;br /&gt;&lt;/div&gt;
&lt;div style="text-align: center;"&gt;
&amp;lt;html&amp;gt;&lt;/div&gt;
&lt;div style="text-align: center;"&gt;
&amp;lt;head&amp;gt;&amp;lt;title&amp;gt;Olá Mundo&amp;lt;/title&amp;gt;&amp;lt;/head&amp;gt;&lt;/div&gt;
&lt;div style="text-align: center;"&gt;
&amp;lt;body&amp;gt;&lt;/div&gt;
&lt;div style="text-align: center;"&gt;
&amp;lt;div id="main"&amp;gt;&lt;/div&gt;
&lt;div style="text-align: center;"&gt;
&amp;lt;ul id="#itemList&amp;gt;&lt;/div&gt;
&lt;div style="text-align: center;"&gt;
&amp;lt;li&amp;gt;&amp;lt;/li&amp;gt;&lt;/div&gt;
&lt;div style="text-align: center;"&gt;
&amp;lt;/ul&amp;gt;&lt;/div&gt;
&lt;div style="text-align: center;"&gt;
&amp;lt;li&amp;gt;&lt;/div&gt;
&lt;div style="text-align: center;"&gt;
&amp;lt;/div&amp;gt;&lt;/div&gt;
&lt;div style="text-align: center;"&gt;
&amp;lt;/body&amp;gt;&lt;/div&gt;
&lt;div style="text-align: center;"&gt;
&amp;lt;/html&amp;gt;&lt;/div&gt;
&lt;div style="text-align: justify;"&gt;
&lt;br /&gt;&lt;/div&gt;
&lt;div style="text-align: left;"&gt;
Para seleccionar a Tag &amp;lt;ul&amp;gt; podia simplesmente usar a função: document.getElementByTagName('&amp;lt;ul&amp;gt;');&amp;nbsp;&lt;/div&gt;
&lt;div style="text-align: left;"&gt;
&lt;br /&gt;&lt;/div&gt;
&lt;div style="text-align: left;"&gt;
Sendo que estou a usar um ID (id=#itemList) posso usar a função:&lt;/div&gt;
&lt;div style="text-align: left;"&gt;
document.getElementById('#itemList');&amp;nbsp;&lt;/div&gt;
&lt;div style="text-align: left;"&gt;
&lt;br /&gt;&lt;/div&gt;
&lt;div style="text-align: left;"&gt;
Assim já posso atribuir um valor à primeira tag &amp;lt;li&amp;gt;.&amp;nbsp;&lt;/div&gt;
&lt;div style="text-align: left;"&gt;
&lt;br /&gt;&lt;/div&gt;
&lt;div style="text-align: left;"&gt;
const itemsList = document.querySelector('#itemList'); &amp;lt;&amp;lt;&amp;lt; Declaração de variavel não mutável:&amp;nbsp;&lt;/div&gt;
&lt;div&gt;
itemsList.innerHTML = '&amp;lt;p&amp;gt; This is a test &amp;lt;/p&amp;gt;'; &amp;lt;&amp;lt;&amp;lt; substituição do conteúdo da tag &amp;lt;li&amp;gt;&lt;br /&gt;
&lt;br /&gt;
Para adicionar conteúdo em vez de substituir, usa-se o operador +=&amp;nbsp;&lt;/div&gt;
&lt;div&gt;
&lt;br /&gt;&lt;/div&gt;
&lt;div&gt;
O JavaScript pode ser usado para imensas coisas, mas para já irei focar-me no método de converter objectos de JSON em strings. Posso fazer essa conversão via Parse ou via JSON.stringify().&amp;nbsp;&lt;/div&gt;
&lt;div&gt;
&lt;br /&gt;&lt;/div&gt;
&lt;div&gt;
Ainda não domino essa técnica, mas será parte da segunda parte deste post.&amp;nbsp;&lt;/div&gt;
&lt;div&gt;
&lt;br /&gt;&lt;/div&gt;
&lt;div&gt;
Talvez possa criar todos os elementos usados na página, a partir de um ficheiro.json&lt;/div&gt;
&lt;div&gt;
&lt;br /&gt;&lt;/div&gt;
&lt;div&gt;
A documentação do site: &lt;a href="https://developer.mozilla.org/en-US/" rel="nofollow" target="_blank"&gt;MDN&lt;/a&gt;&amp;nbsp;é extenso e tem muitos exemplos práticos. É a partir desta forte que tenho estudado JavaScript, HTML e CSS. Existem muitas fontes para o mesmo efeito, mas esta é uma das mais recomendadas!&amp;nbsp;&lt;/div&gt;
&lt;div&gt;
&lt;br /&gt;&lt;/div&gt;
&lt;div&gt;
Espero trazer algo de novo amanhã e adicionar novo conteúdo à conta do github.&amp;nbsp;&lt;/div&gt;
&lt;div&gt;
&lt;br /&gt;&lt;/div&gt;
&lt;div&gt;
Quem quiser seguir o desenvolvimento do blog / projecto, basta se inscrever como seguidor do meu perfil e\ou subscrever a minha actividade no Github.&amp;nbsp;&lt;/div&gt;
&lt;div&gt;
&lt;br /&gt;&lt;/div&gt;
&lt;div&gt;
Até à próxima e obrigado pela atenção!&lt;/div&gt;
</content>
    <blogger:created>2018-04-17T16:10:28.588Z</blogger:created>
    <published>2018-04-17T16:58:00Z</published>
    <updated>2018-04-17T17:14:22.021Z</updated>
    <category scheme='tag:blogger.com,1999:blog-8958110170585286245' term='odicforcesounds'/>
    <category scheme='tag:blogger.com,1999:blog-8958110170585286245' term='CSS'/>
    <category scheme='tag:blogger.com,1999:blog-8958110170585286245' term='Github'/>
    <category scheme='tag:blogger.com,1999:blog-8958110170585286245' term='HTML'/>
    <category scheme='tag:blogger.com,1999:blog-8958110170585286245' term='JSON'/>
    <category scheme='tag:blogger.com,1999:blog-8958110170585286245' term='npm'/>
    <category scheme='tag:blogger.com,1999:blog-8958110170585286245' term='nodejs'/>
    <category scheme='tag:blogger.com,1999:blog-8958110170585286245' term='preguiçoso'/>
    <category scheme='tag:blogger.com,1999:blog-8958110170585286245' term='hacking'/>
    <category scheme='tag:blogger.com,1999:blog-8958110170585286245' term='humor'/>
    <category scheme='tag:blogger.com,1999:blog-8958110170585286245' term='Web'/>
    <category scheme='tag:blogger.com,1999:blog-8958110170585286245' term='webpack'/>
    <category scheme='tag:blogger.com,1999:blog-8958110170585286245' term='OpenSource'/>
    <category scheme='tag:blogger.com,1999:blog-8958110170585286245' term='JavaScript'/>
    <category scheme='tag:blogger.com,1999:blog-8958110170585286245' term='macaco'/>
    <category scheme='tag:blogger.com,1999:blog-8958110170585286245' term='Desafio'/>
    <blogger:filename>/2018/04/manual-de-instrucoes-parte-1.html</blogger:filename>
  </entry>
  <entry>
    <id>tag:blogger.com,1999:blog-8958110170585286245.post-6919609470181599960</id>
    <blogger:type>POST</blogger:type>
    <blogger:status>LIVE</blogger:status>
    <author>
      <name>Oscar Fm</name>
      <uri>https://plus.google.com/+OscarFMacedoOdicforcesounds</uri>
      <blogger:type>BLOGGER</blogger:type>
    </author>
    <title>Anulação da Criatividade - A Cozinha</title>
    <content type='html'>&lt;div style="text-align: justify;"&gt;
Até parece que estou a brincar, mas não estou. A cozinha é onde a criatividade de quem cozinha pode ganhar espaço sobre as mentes deliciadas pelos belos e soculentos sabores das receitas que elabora, mas uma cozinha não é propriamente uma escola de arte e\ou um centro de estudos.&lt;/div&gt;
&lt;div style="text-align: justify;"&gt;
&lt;br /&gt;&lt;/div&gt;
&lt;div style="text-align: justify;"&gt;
Quero cozinhar um prato com o minimo requerido para ele ter um sabor próprio, mas para saber cozinhar tenho de saber como lidar com as várias ferramentas que a cozinha oferece.&lt;/div&gt;
&lt;div style="text-align: justify;"&gt;
&lt;br /&gt;&lt;/div&gt;
&lt;div style="text-align: justify;"&gt;
O JavaScript é a cozinha e até o &lt;b&gt;JavaScript&lt;/b&gt; tem versões de qualidade e eficiência.&lt;/div&gt;
&lt;div style="text-align: justify;"&gt;
Quanto maior a versão usada, mais eficiência.&lt;/div&gt;
&lt;div style="text-align: justify;"&gt;
&lt;br /&gt;&lt;/div&gt;
&lt;div style="text-align: justify;"&gt;
Ora como tinha dito anteriormente, não tenciono inventar a roda nem criar algo de novo, simplesmente usar o que já existe de forma a adaptar-me às necessidades.&lt;/div&gt;
&lt;div style="text-align: justify;"&gt;
&lt;br /&gt;&lt;/div&gt;
&lt;div style="text-align: justify;"&gt;
O JavaScript que tem o nome de &lt;a href="https://tc39.github.io/ecma262" rel="nofollow" target="_blank"&gt;ECMAScript&lt;/a&gt; está na versão 2019.&lt;/div&gt;
&lt;div style="text-align: justify;"&gt;
( lol esta gente pensa mesmo no futuro )&lt;/div&gt;
&lt;div style="text-align: justify;"&gt;
&lt;br /&gt;&lt;/div&gt;
&lt;div style="text-align: justify;"&gt;
É interessante ver como a língua está estruturada e como é explicada. Preciso de alguma abstração para poder ler, mas na verdade há algumas instruções que mudaram de nome, como nova funcionalidades que as versão anteriores não têm. Esta nova versão já aceita &lt;a href="https://www.typescriptlang.org/" rel="nofollow" target="_blank"&gt;TypeScript&lt;/a&gt; que é considerado uma Super versão do JavaScript, mas que os browsers não conseguem ler e por isso, é necessário compilar os ficheiros .ts e converte-los para .js.&lt;/div&gt;
&lt;div style="text-align: justify;"&gt;
&lt;br /&gt;&lt;/div&gt;
&lt;div style="text-align: justify;"&gt;
De algum modo é sempre interessante pensar que posso escrever o código em TypeScript e converte-lo para JavaScript, mas a intenção é mesmo aprender somente JavaScript pois o TypeScript usa instruções que fazem parte da ultima versão do JavaScript.&lt;/div&gt;
&lt;div style="text-align: justify;"&gt;
&lt;br /&gt;&lt;/div&gt;
&lt;div style="text-align: justify;"&gt;
Ora, sendo que cada uma das opções que uma cozinha tem para alguém confeccionar comida, neste caso são todas as funcionalidades do JavaScript, terei de saber o que cada uma das ferramentas faz para saber como usa-las.&lt;/div&gt;
&lt;div style="text-align: justify;"&gt;
&lt;br /&gt;&lt;/div&gt;
&lt;div style="text-align: justify;"&gt;
O JavaScript é usado para minipular o conteúdo dos vários elementos do HTML chamados nodes (nós) de forma a acrescentar, modificar e\ou remover dados.&lt;/div&gt;
&lt;div style="text-align: justify;"&gt;
&lt;br /&gt;&lt;/div&gt;
&lt;div style="text-align: justify;"&gt;
Também se pode acrescentar estes nós "HTML tags" ao ficheiro HTML via JavaScript.&lt;/div&gt;
&lt;div style="text-align: justify;"&gt;
&lt;br /&gt;&lt;/div&gt;
&lt;div style="text-align: justify;"&gt;
Conteúdo parece que até o JavaScript usa normativas de JSON. Ora, NoSQL também é relativamente parecido com JSON. Por outro lado, para a indexação de sites usa-se o XML. Seja qual for a natureza do ficheiro que guarda dados, pode-se usar o JavaScript para manipular esses dados.&lt;/div&gt;
&lt;br /&gt;
&lt;div style="text-align: center;"&gt;
&lt;iframe frameborder="0" height="120" src="https://www.mixcloud.com/widget/iframe/?hide_cover=1&amp;amp;feed=%2FOdicforceSounds%2Fmr-json%2F" width="100%"&gt;&lt;/iframe&gt;&lt;/div&gt;
&lt;div style="text-align: center;"&gt;
&lt;br /&gt;&lt;/div&gt;
&lt;div style="text-align: center;"&gt;
&lt;div style="text-align: justify;"&gt;
Por vezes o problema para fazer um site é o de encontrar conteúdo para preenche-lo, mas no meu caso, conteúdo não falta, mas sim organização do conteúdo. Ora quanto a mim, os ficheiros JSON e\ou os &lt;b&gt;Arrays&lt;/b&gt;&amp;nbsp;ou &lt;b&gt;Objectos&lt;/b&gt; em JavaScript são mais fáceis de organizar.&amp;nbsp;&lt;/div&gt;
&lt;div style="text-align: justify;"&gt;
&lt;br /&gt;&lt;/div&gt;
&lt;div style="text-align: justify;"&gt;
&lt;span style="background-color: black; color: lime;"&gt;{&lt;/span&gt;&lt;/div&gt;
&lt;div style="text-align: justify;"&gt;
&lt;span style="background-color: black; color: lime;"&gt;"&lt;/span&gt;&lt;span style="background-color: black; color: yellow;"&gt;siteNome&lt;/span&gt;&lt;span style="background-color: black; color: lime;"&gt;":"&lt;/span&gt;&lt;span style="background-color: black; color: yellow;"&gt;Macaco Preguiçoso&lt;/span&gt;&lt;span style="background-color: black; color: lime;"&gt;",&lt;/span&gt;&lt;/div&gt;
&lt;div style="text-align: justify;"&gt;
&lt;span style="background-color: black; color: lime;"&gt;"&lt;/span&gt;&lt;span style="background-color: black; color: yellow;"&gt;artigos&lt;/span&gt;&lt;span style="background-color: black; color: lime;"&gt;": [&lt;/span&gt;&lt;/div&gt;
&lt;div style="text-align: justify;"&gt;
&lt;span style="background-color: black; color: lime;"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;{&lt;/span&gt;&lt;/div&gt;
&lt;div style="text-align: justify;"&gt;
&lt;span style="background-color: black; color: lime;"&gt;"&lt;/span&gt;&lt;span style="background-color: black; color: yellow;"&gt;titulo&lt;/span&gt;&lt;span style="background-color: black; color: lime;"&gt;":"&lt;/span&gt;&lt;span style="background-color: black; color: yellow;"&gt;blabla&lt;/span&gt;&lt;span style="background-color: black; color: lime;"&gt;",&lt;/span&gt;&lt;/div&gt;
&lt;div style="text-align: justify;"&gt;
&lt;span style="background-color: black; color: lime;"&gt;"&lt;/span&gt;&lt;span style="background-color: black; color: yellow;"&gt;descrição&lt;/span&gt;&lt;span style="background-color: black; color: lime;"&gt;":"&lt;/span&gt;&lt;span style="background-color: black; color: yellow;"&gt;blebleble&lt;/span&gt;&lt;span style="background-color: black; color: lime;"&gt;",&lt;/span&gt;&lt;/div&gt;
&lt;div style="text-align: justify;"&gt;
&lt;span style="background-color: black; color: lime;"&gt;"&lt;/span&gt;&lt;span style="background-color: black; color: yellow;"&gt;data&lt;/span&gt;&lt;span style="background-color: black; color: lime;"&gt;":"&lt;/span&gt;&lt;span style="background-color: black; color: yellow;"&gt;123123123&lt;/span&gt;&lt;span style="background-color: black; color: lime;"&gt;",&lt;/span&gt;&lt;/div&gt;
&lt;div style="text-align: justify;"&gt;
&lt;span style="background-color: black; color: lime;"&gt;&amp;nbsp; &amp;nbsp; }&lt;/span&gt;&lt;/div&gt;
&lt;div style="text-align: justify;"&gt;
&lt;span style="background-color: black; color: lime;"&gt;&amp;nbsp; ]&lt;/span&gt;&lt;/div&gt;
&lt;div style="text-align: justify;"&gt;
&lt;span style="background-color: black; color: lime;"&gt;}&lt;/span&gt;&lt;/div&gt;
&lt;div style="text-align: justify;"&gt;
&lt;br /&gt;&lt;/div&gt;
&lt;div style="text-align: justify;"&gt;
De linguagem para linguagem os termos das estrutura de dados vão mudando conforme as especificações da própria linguagem, mas no fundo o que é necessário é entender como é simples ler os dados quando a sintax dos mesmos está mais estruturada ao nível visual.&amp;nbsp;&lt;/div&gt;
&lt;div style="text-align: justify;"&gt;
&lt;br /&gt;&lt;/div&gt;
&lt;div style="text-align: justify;"&gt;
Algumas das ultimas apresentações que vi sobre a estrutura de dados em JavaScript, os autores das apresentações preferiram usar esquemas com formas e cores em substituição das estruturas em código da linguagem em questão.&amp;nbsp;&lt;/div&gt;
&lt;div style="text-align: justify;"&gt;
&lt;br /&gt;&lt;/div&gt;
&lt;div style="text-align: justify;"&gt;
Assim antes de desenhar um mapa sobre como poderá funcionar o site e a aplicação, terei de dominar a arte de transpor os elementos de uma tabela de JSON para os elementos da página que estou a usar.&amp;nbsp;&lt;/div&gt;
&lt;div style="text-align: justify;"&gt;
&lt;br /&gt;&lt;/div&gt;
&lt;div style="text-align: justify;"&gt;
Para enumerar elementos de um objecto em JavaScript terei de usar uma função ciclica, tal como o &lt;b&gt;for&lt;/b&gt; ou o &lt;b&gt;while&lt;/b&gt; que naturalmente são funções que precisam de condições. As condições precisam de expressões de Verdade como também possibilidades de existência e\ou solução.&amp;nbsp;&lt;/div&gt;
&lt;div style="text-align: justify;"&gt;
&lt;br /&gt;&lt;/div&gt;
&lt;div style="text-align: justify;"&gt;
Para se entender o que estou a dizer considere-se o seguinte exemplo em JavaScript:&lt;/div&gt;
&lt;div style="text-align: justify;"&gt;
&lt;br /&gt;&lt;/div&gt;
&lt;pre class="default prettyprint prettyprinted" style="background-color: #eff0f1; border: 0px; box-sizing: inherit; color: #393318; font-family: Consolas, Menlo, Monaco, &amp;quot;Lucida Console&amp;quot;, &amp;quot;Liberation Mono&amp;quot;, &amp;quot;DejaVu Sans Mono&amp;quot;, &amp;quot;Bitstream Vera Sans Mono&amp;quot;, &amp;quot;Courier New&amp;quot;, monospace, sans-serif; font-size: 13px; font-stretch: inherit; font-variant-east-asian: inherit; font-variant-numeric: inherit; line-height: inherit; margin-bottom: 1em; max-height: 600px; overflow: auto; padding: 5px; text-align: left; vertical-align: baseline; width: auto; word-wrap: normal;"&gt;&lt;code style="border: 0px; box-sizing: inherit; font-family: Consolas, Menlo, Monaco, &amp;quot;Lucida Console&amp;quot;, &amp;quot;Liberation Mono&amp;quot;, &amp;quot;DejaVu Sans Mono&amp;quot;, &amp;quot;Bitstream Vera Sans Mono&amp;quot;, &amp;quot;Courier New&amp;quot;, monospace, sans-serif; font-stretch: inherit; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: inherit; margin: 0px; padding: 0px; vertical-align: baseline; white-space: inherit;"&gt;&lt;span class="kwd" style="border: 0px; box-sizing: inherit; color: #101094; font-family: inherit; font-stretch: inherit; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: inherit; margin: 0px; padding: 0px; vertical-align: baseline;"&gt;for&lt;/span&gt;&lt;span class="pln" style="border: 0px; box-sizing: inherit; color: #303336; font-family: inherit; font-stretch: inherit; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: inherit; margin: 0px; padding: 0px; vertical-align: baseline;"&gt; &lt;/span&gt;&lt;span class="pun" style="border: 0px; box-sizing: inherit; color: #303336; font-family: inherit; font-stretch: inherit; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: inherit; margin: 0px; padding: 0px; vertical-align: baseline;"&gt;(&lt;/span&gt;&lt;span class="kwd" style="border: 0px; box-sizing: inherit; color: #101094; font-family: inherit; font-stretch: inherit; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: inherit; margin: 0px; padding: 0px; vertical-align: baseline;"&gt;var&lt;/span&gt;&lt;span class="pln" style="border: 0px; box-sizing: inherit; color: #303336; font-family: inherit; font-stretch: inherit; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: inherit; margin: 0px; padding: 0px; vertical-align: baseline;"&gt; i &lt;/span&gt;&lt;span class="pun" style="border: 0px; box-sizing: inherit; color: #303336; font-family: inherit; font-stretch: inherit; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: inherit; margin: 0px; padding: 0px; vertical-align: baseline;"&gt;=&lt;/span&gt;&lt;span class="pln" style="border: 0px; box-sizing: inherit; color: #303336; font-family: inherit; font-stretch: inherit; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: inherit; margin: 0px; padding: 0px; vertical-align: baseline;"&gt; &lt;/span&gt;&lt;span class="lit" style="border: 0px; box-sizing: inherit; color: #7d2727; font-family: inherit; font-stretch: inherit; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: inherit; margin: 0px; padding: 0px; vertical-align: baseline;"&gt;0&lt;/span&gt;&lt;span class="pun" style="border: 0px; box-sizing: inherit; color: #303336; font-family: inherit; font-stretch: inherit; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: inherit; margin: 0px; padding: 0px; vertical-align: baseline;"&gt;;&lt;/span&gt;&lt;span class="pln" style="border: 0px; box-sizing: inherit; color: #303336; font-family: inherit; font-stretch: inherit; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: inherit; margin: 0px; padding: 0px; vertical-align: baseline;"&gt; i &lt;/span&gt;&lt;span class="pun" style="border: 0px; box-sizing: inherit; color: #303336; font-family: inherit; font-stretch: inherit; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: inherit; margin: 0px; padding: 0px; vertical-align: baseline;"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pln" style="border: 0px; box-sizing: inherit; color: #303336; font-family: inherit; font-stretch: inherit; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: inherit; margin: 0px; padding: 0px; vertical-align: baseline;"&gt; 10&lt;/span&gt;&lt;span class="pun" style="border: 0px; box-sizing: inherit; color: #303336; font-family: inherit; font-stretch: inherit; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: inherit; margin: 0px; padding: 0px; vertical-align: baseline;"&gt;;&lt;/span&gt;&lt;span class="pln" style="border: 0px; box-sizing: inherit; color: #303336; font-family: inherit; font-stretch: inherit; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: inherit; margin: 0px; padding: 0px; vertical-align: baseline;"&gt; i+&lt;/span&gt;&lt;span class="pun" style="border: 0px; box-sizing: inherit; color: #303336; font-family: inherit; font-stretch: inherit; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: inherit; margin: 0px; padding: 0px; vertical-align: baseline;"&gt;+&lt;/span&gt;&lt;span class="pun" style="border: 0px; box-sizing: inherit; color: #303336; font-family: inherit; font-stretch: inherit; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: inherit; margin: 0px; padding: 0px; vertical-align: baseline;"&gt;)&lt;/span&gt;&lt;span class="pln" style="border: 0px; box-sizing: inherit; color: #303336; font-family: inherit; font-stretch: inherit; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: inherit; margin: 0px; padding: 0px; vertical-align: baseline;"&gt; &lt;/span&gt;&lt;span class="pun" style="border: 0px; box-sizing: inherit; color: #303336; font-family: inherit; font-stretch: inherit; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: inherit; margin: 0px; padding: 0px; vertical-align: baseline;"&gt;{} POSSIVEL&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class="default prettyprint prettyprinted" style="background-color: #eff0f1; border: 0px; box-sizing: inherit; color: #393318; font-family: Consolas, Menlo, Monaco, &amp;quot;Lucida Console&amp;quot;, &amp;quot;Liberation Mono&amp;quot;, &amp;quot;DejaVu Sans Mono&amp;quot;, &amp;quot;Bitstream Vera Sans Mono&amp;quot;, &amp;quot;Courier New&amp;quot;, monospace, sans-serif; font-size: 13px; font-stretch: inherit; font-variant-east-asian: inherit; font-variant-numeric: inherit; line-height: inherit; margin-bottom: 1em; max-height: 600px; overflow: auto; padding: 5px; text-align: left; vertical-align: baseline; width: auto; word-wrap: normal;"&gt;for&lt;span class="pln" style="border: 0px; box-sizing: inherit; color: #303336; font-family: inherit; font-stretch: inherit; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: inherit; margin: 0px; padding: 0px; vertical-align: baseline; white-space: inherit;"&gt; &lt;/span&gt;&lt;span class="pun" style="border: 0px; box-sizing: inherit; color: #303336; font-family: inherit; font-stretch: inherit; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: inherit; margin: 0px; padding: 0px; vertical-align: baseline; white-space: inherit;"&gt;(&lt;/span&gt;&lt;span class="kwd" style="border: 0px; box-sizing: inherit; color: #101094; font-family: inherit; font-stretch: inherit; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: inherit; margin: 0px; padding: 0px; vertical-align: baseline; white-space: inherit;"&gt;var&lt;/span&gt;&lt;span class="pln" style="border: 0px; box-sizing: inherit; color: #303336; font-family: inherit; font-stretch: inherit; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: inherit; margin: 0px; padding: 0px; vertical-align: baseline; white-space: inherit;"&gt; i &lt;/span&gt;&lt;span class="pun" style="border: 0px; box-sizing: inherit; color: #303336; font-family: inherit; font-stretch: inherit; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: inherit; margin: 0px; padding: 0px; vertical-align: baseline; white-space: inherit;"&gt;=&lt;/span&gt;&lt;span class="pln" style="border: 0px; box-sizing: inherit; color: #303336; font-family: inherit; font-stretch: inherit; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: inherit; margin: 0px; padding: 0px; vertical-align: baseline; white-space: inherit;"&gt; &lt;/span&gt;&lt;span class="lit" style="border: 0px; box-sizing: inherit; color: #7d2727; font-family: inherit; font-stretch: inherit; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: inherit; margin: 0px; padding: 0px; vertical-align: baseline; white-space: inherit;"&gt;0&lt;/span&gt;&lt;span class="pun" style="border: 0px; box-sizing: inherit; color: #303336; font-family: inherit; font-stretch: inherit; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: inherit; margin: 0px; padding: 0px; vertical-align: baseline; white-space: inherit;"&gt;;&lt;/span&gt;&lt;span class="pln" style="border: 0px; box-sizing: inherit; color: #303336; font-family: inherit; font-stretch: inherit; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: inherit; margin: 0px; padding: 0px; vertical-align: baseline; white-space: inherit;"&gt; i &amp;lt; -1 &lt;/span&gt;&lt;span class="pun" style="border: 0px; box-sizing: inherit; color: #303336; font-family: inherit; font-stretch: inherit; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: inherit; margin: 0px; padding: 0px; vertical-align: baseline; white-space: inherit;"&gt;;&lt;/span&gt;&lt;span class="pln" style="border: 0px; box-sizing: inherit; color: #303336; font-family: inherit; font-stretch: inherit; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: inherit; margin: 0px; padding: 0px; vertical-align: baseline; white-space: inherit;"&gt; i--&lt;/span&gt;&lt;span class="pun" style="border: 0px; box-sizing: inherit; color: #303336; font-family: inherit; font-stretch: inherit; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: inherit; margin: 0px; padding: 0px; vertical-align: baseline; white-space: inherit;"&gt;)&lt;/span&gt;&lt;span class="pln" style="border: 0px; box-sizing: inherit; color: #303336; font-family: inherit; font-stretch: inherit; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: inherit; margin: 0px; padding: 0px; vertical-align: baseline; white-space: inherit;"&gt; &lt;/span&gt;&lt;span class="pun" style="border: 0px; box-sizing: inherit; color: #303336; font-family: inherit; font-stretch: inherit; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: inherit; margin: 0px; padding: 0px; vertical-align: baseline; white-space: inherit;"&gt;{} IMPOSSIVEL&lt;/span&gt;&lt;/pre&gt;
&lt;div style="text-align: justify;"&gt;
Se formos ler mais sobre a declaração de variaveis em JavaScript, nota-se que há uma constante reciclagem do valor original de cada uma delas para haver forma de as manipular sem perder o valor original de cada uma. Talvez seja por isso que a ultima versão do JavaScript usa &lt;b&gt;let&lt;/b&gt; em vez de &lt;b&gt;var&lt;/b&gt;, como primeira opção de declaração de variaveis. Existe também o &lt;b&gt;const&lt;/b&gt; que parece ser usado na declaração de variaveis que são funções. Os termos certos ainda não estão integrados no meu cérebro, mas com o tempo irei entender melhor cada um deles.&amp;nbsp;&lt;/div&gt;
&lt;div style="text-align: justify;"&gt;
&lt;br /&gt;&lt;/div&gt;
&lt;div style="text-align: justify;"&gt;
Trabalho de casa: Usar a ultima versão do JavaScript. Instalar o &lt;a href="https://babeljs.io/" rel="nofollow" target="_blank"&gt;Babel&lt;/a&gt;.&amp;nbsp;&lt;/div&gt;
&lt;div style="text-align: justify;"&gt;
&lt;br /&gt;&lt;/div&gt;
&lt;div style="text-align: justify;"&gt;
O &lt;a href="https://www.npmjs.com/" rel="nofollow" target="_blank"&gt;NPM&lt;/a&gt; é um gestor de ficheiros e\ou aplicações de JavaScript. Permite "instalar" (download de ficheiros para uma pasta local do projecto), organizar as versões das aplicações instaladas a partir do ficheiro &lt;b&gt;package.json&lt;/b&gt;&amp;nbsp;e naturalmente remover aplicações instaladas.&lt;/div&gt;
&lt;div style="text-align: justify;"&gt;
&lt;br /&gt;&lt;/div&gt;
&lt;div style="text-align: justify;"&gt;
Para já parece que vou-me permitir usar o npm para usar uma versão mais actualizada do JavaScript, mas como poderão entender, até o angular é instalado via npm, o que significa que é inetivável instalar aplicações JavaScript das mais variadas funções, para melhorar tanto a forma como lidar com as páginas web, como também cria dinâmicas mais fáceis para eu não perder tanto tempo a testar o que vou fazendo.&amp;nbsp;&lt;/div&gt;
&lt;div style="text-align: justify;"&gt;
&lt;br /&gt;&lt;/div&gt;
&lt;div style="text-align: justify;"&gt;
Por norma uso uma função e\ou libraria do Python para criar um servidor web local.&amp;nbsp;&lt;/div&gt;
&lt;div style="text-align: justify;"&gt;
Executo na pasta onde está o ficheiro index.html o seguinte comando no terminal:&lt;/div&gt;
&lt;div style="text-align: justify;"&gt;
$ python -m SimpleHTTPServer&amp;nbsp;&lt;/div&gt;
&lt;div style="text-align: justify;"&gt;
&lt;br /&gt;&lt;/div&gt;
&lt;div style="text-align: justify;"&gt;
Por cada modificação que faça ora no CSS, ora no JavaScript, ora no HTML, tenho de fazer refresh da página, isto é, clicar no F5. Porque sou preguiçoso, posso usar uma das várias librarias que servem o propósito de fazer auto-refresh da página, sempre que salvo o ficheiro modificado.&amp;nbsp;&lt;/div&gt;
&lt;div style="text-align: justify;"&gt;
&lt;br /&gt;&lt;/div&gt;
&lt;div style="text-align: justify;"&gt;
Já teremos falado do &lt;a href="https://survivejs.com/webpack/developing/webpack-dev-server/" rel="nofollow" target="_blank"&gt;Webpack&lt;/a&gt; num post anterior, mas creio que será um must instalar, pois faz parte das recomendações. (quem não sabe é como quem não vê) Ainda bem que há quem pense nisso!&amp;nbsp;&lt;/div&gt;
&lt;div style="text-align: justify;"&gt;
&lt;br /&gt;&lt;/div&gt;
&lt;div style="text-align: justify;"&gt;
Por mais que eu gostasse de fugir das frameworks, reparo que as frameworks usam conjuntos de librarias muito semelhantes a muitas outras, o que significa que até as frameworks são reciclagens de aplicações que melhoram e facilitam a vida dos programadores e como tal, mesmo antes de começar a praticar JavaScript tenho de instalar ficheiros extra. Isto quase me lembra distribuições Linux. Não há uma propriamente original no sentido de ter conteúdo diferente das outras, pois qualquer uma pode ter o mesmo conteúdo do que as outras. Sai uma nova versão de uma distribuição que tem a nova versão do kernel mais estável e as ultimas versões dos software mais usados, acrescenta-se uma imagens bonitas e pronto, uma nova distribuição. O mesmo parece acontecer com as Frameworks de JavaScript. São cada vez mais e todas fazem mais ou menos o mesmo de todas as outras, sendo que umas serão mais leves do que outras de acordo como resolvem o "problema". Manipular dos nodes do HTML.&amp;nbsp;&lt;/div&gt;
&lt;div style="text-align: justify;"&gt;
&lt;br /&gt;&lt;/div&gt;
&lt;div style="text-align: justify;"&gt;
Aprender pede a repetição de algo que indica a forma correcta de execução de uma operação qualquer que queremos e\ou temos de aprender. Seja lá o que queremos aprender, tem regras que indicam instruções que detalham a forma como fazer determinada acção. Antes de preparar os alimentos, tenho de saber quais as ferramentas que preciso de usar para os confeccionar. Talvez o ovo estrelado não saia bem a primeira vez, mesmo que seja só pôr azeite ou óleo na sertã, abrir o ovo, deita-lo na sertã e esperar que fique pronto. Não há qualquer ciência poderá dizer-se, mas estarei esquecer-me do forno?&amp;nbsp;&lt;/div&gt;
&lt;/div&gt;
</content>
    <blogger:created>2018-04-16T06:35:44.852Z</blogger:created>
    <published>2018-04-16T10:35:00Z</published>
    <updated>2018-04-16T10:38:37.303Z</updated>
    <category scheme='tag:blogger.com,1999:blog-8958110170585286245' term='odicforcesounds'/>
    <category scheme='tag:blogger.com,1999:blog-8958110170585286245' term='CSS'/>
    <category scheme='tag:blogger.com,1999:blog-8958110170585286245' term='Github'/>
    <category scheme='tag:blogger.com,1999:blog-8958110170585286245' term='HTML'/>
    <category scheme='tag:blogger.com,1999:blog-8958110170585286245' term='JSON'/>
    <category scheme='tag:blogger.com,1999:blog-8958110170585286245' term='npm'/>
    <category scheme='tag:blogger.com,1999:blog-8958110170585286245' term='nodejs'/>
    <category scheme='tag:blogger.com,1999:blog-8958110170585286245' term='preguiçoso'/>
    <category scheme='tag:blogger.com,1999:blog-8958110170585286245' term='hacking'/>
    <category scheme='tag:blogger.com,1999:blog-8958110170585286245' term='humor'/>
    <category scheme='tag:blogger.com,1999:blog-8958110170585286245' term='Web'/>
    <category scheme='tag:blogger.com,1999:blog-8958110170585286245' term='webpack'/>
    <category scheme='tag:blogger.com,1999:blog-8958110170585286245' term='OpenSource'/>
    <category scheme='tag:blogger.com,1999:blog-8958110170585286245' term='JavaScript'/>
    <category scheme='tag:blogger.com,1999:blog-8958110170585286245' term='macaco'/>
    <category scheme='tag:blogger.com,1999:blog-8958110170585286245' term='Desafio'/>
    <blogger:filename>/2018/04/anulacao-da-criatividade-cozinha.html</blogger:filename>
  </entry>
</feed>